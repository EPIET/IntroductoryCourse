---
title: "SimOb Inject 14 - Univariable analysis"
format: docx
editor: visual
---

## 1. Install packages and load libraries

```{r}
# Load the required libraries into the current R session:
pacman::p_load(rio, 
               here, 
               tidyverse, 
               skimr,
               plyr,
               janitor,
               lubridate,
               gtsummary, 
               flextable,
               officer,
               epikit, 
               apyramid, 
               scales,
               EpiStats,
               broom)

```

## 2. Import your data

```{r, Import_data}
# Import the raw data set:
copdata <- rio::import(here::here("data", "Copenhagen_clean2.rds"))
```

## 3. Hypothesis tests for other variables

#### a) age

```{r}
# Check if age overall follows a normal distribution:
shapiro.test(copdata$age)
# Can simply have a look at
hist(copdata$age)

# Looking only at the students:
students <- copdata %>% 
  filter(group == "student")
hist(students$age)
```

Age overall (nor within the students' group) is not normally distributed.

```{r}
# Perform Wilcoxon rank sum test on age and sex:
wilcox.test(age ~ case, 
            data = copdata)
```

#### b) sex

```{r}
copdata %>% 
  select(sex, case) %>% 
  tbl_summary(by = case) %>% 
  add_p()

```

#### c) class

```{r}
copdata %>% 
  select(class, case) %>% 
  tbl_summary(by = case) %>% 
  add_p()

```

#### d) group

```{r}
copdata %>% 
  select(group, case) %>% 
  tbl_summary(by = case) %>% 
  add_p()
```

#### Let's do all together

```{r}

copdata %>% 
  select(sex, class, group, case) %>% 
  tbl_summary(by = case) %>% 
  add_p()

```


## 4. Risk Ratios

### a) Calculate 95% CI Risk Ratios for food

```{r}
# You could use the EpiStats package for each food item
CS(copdata, "case", "tuna")
CS(copdata, "case", "shrimps")
CS(copdata, "case", "green")
CS(copdata, "case", "veal")
# And so one
```

```{r}
# You can save time (and probably typos!) by creating a vector for food variables...
food_vars <- c("tuna", "shrimps", "green", "veal", 
                "pasta", "rocket", "sauce", "bread",
                "champagne", "beer", "redwine", "whitewine")

# ...and using EpiStats::CSTable() to run all variables together!
CSTable(copdata, "case", food_vars)
```

### b) Prepare the RR table for publication

```{r}
rr_tbl <- CSTable(copdata, "case", food_vars) %>% 
  as.data.frame() %>% 
  rownames_to_column() %>% 
  flextable() %>% 
   set_header_labels(
     values = c("Food Item",
                "Total exposed",     
               "Cases exposed", 
               "AR among exposed",    
               "Total unexposed",
               "Cases unexposed",
               "AR among unexposed",
               "RR",         
               "95% lower CI",             
               "95% upper CI",
               "p-value"))
```


## 5. Dose Response

#### a) Veal

```{r}
#Binomial regression for RRs 
binom_vealD <- glm(case ~ vealD, data = copdata, 
             family = binomial(link = "log"))

# To get exponentiated
binom_vealD_exp <- glm(case ~ vealD, data = copdata, 
                       family = binomial(link = "log")) %>% 
  tidy(exponentiate = TRUE, 
       conf.int = TRUE)

binom_vealD_exp
```

#### b) Pasta

```{r}
#Binomial regression for RRs 
binom_pastaD <- glm(case ~ pastaD, data = copdata, 
             family = binomial(link = "log"))

# To get exponentiated
binom_pastaD_exp <- glm(case ~ pastaD, data = copdata, 
                       family = binomial(link = "log")) %>% 
  tidy(exponentiate = TRUE, 
       conf.int = TRUE)

binom_pastaD_exp
```

